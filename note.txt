 add new subdomain
  maindoamin->manageNameServer->pengelolaanDns->addNewRecord->Record Type = a ip base on ip current ip

 composer update update vendor

 php spark migrate genarate table
 php spark migrate:rollback remove table
 php spark db:seed RunSeeder insert table

 php spark make:scaffold acc_account_name --restful --return entity
 php spark serve

 https://onlinewebtutorblog.com/how-to-enable-cors-in-codeigniter-4-for-rest-apis/

 * template 
    - subject
    - class
    - privilage
    - room
    - student
    - exam

SELECT 
       s.id, s.name,s.classId , e.subjectId, sb.name , sum(if(e.answer= re.choise,e.point,0)) point
FROM 
        resultexams re 
    JOIN exams e on e.id = re.examId 
    JOIN students s on s.id = re.studentId
    JOIN subjects sb on sb.id = e.subjectId
 where s.id = 2
 and  re.createdAt BETWEEN '2022-05-07 00:00:00' AND '2022-05-07 23:59:59' 
  
GROUP by s.id,  e.subjectId;


SELECT 
  s.id, s.name,s.classId,c.name className ,r.name roomName,d.name departmentName, e.subjectId, sb.name , sum(if(e.answer= re.choise,e.point,0)) point
FROM 
resultexams re 
JOIN students s on s.id = re.studentId
JOIN exams e on e.id = re.examId and e.classId = s.classId
JOIN subjects sb on sb.id = e.subjectId
JOIN rooms r on r.id = s.roomId
JOIN departments d on d.id = r.departmentId
JOIN classes c on c.id = s.classId
where re.createdAt BETWEEN '2022-05-07 00:00:00' AND '2022-05-07 23:59:59' and e.classId = 2
and r.departmentId = 1 
and r.id = 1
GROUP by s.id,e.subjectId;

SELECT  s.id, s.name,s.classId,c.name className ,r.name roomName,d.name departmentName, e.subjectId, sb.name , sum(if(e.answer= re.choise,e.point,0)) point
FROM 
resultexams re 
JOIN students s on s.id = re.studentId
JOIN exams e on e.id = re.examId and e.classId = s.classId
JOIN subjects sb on sb.id = e.subjectId
JOIN rooms r on r.id = s.roomId
JOIN departments d on d.id = r.departmentId
JOIN classes c on c.id = s.classId
where re.createdAt BETWEEN '2022-05-07 00:00:00' AND '2022-05-07 23:59:59'   
and s.roomId = 1
and s.classId = 1
GROUP by s.id,e.subjectId;


SELECT `s`.`id`, `s`.`name`, `s`.`classId`, `c`.`name` `className`, `r`.`name` `roomName`, `d`.`name` `departmentName`, `e`.`subjectId`, `sb`.`name`, sum(if(e.answer= resultexams.choise, `e`.`point`, 0)) point
FROM `resultexams`
JOIN `students` `s` ON `s`.`id` = `resultexams`.`studentId`
JOIN `exams` `e` ON `e`.`id` = `resultexams`.`examId` and `e`.`classId` = `s`.`classId`
JOIN `subjects` `sb` ON `sb`.`id` = `e`.`subjectId`
JOIN `rooms` `r` ON `r`.`id` = `s`.`roomId`
JOIN `departments` `d` ON `d`.`id` = `r`.`departmentId`
JOIN `classes` `c` ON `c`.`id` = `s`.`classId`
WHERE `resultexams`.`createdAt` BETWEEN "2022-05-07 00:00:00" and "2022-05-07 23:59:59"
AND `s`.`roomId` = '7'
AND `s`.`classId` = '3'
GROUP BY `s`.`id`, `e`.`subjectId`

https://codeigniter4.github.io/userguide/libraries/time.html

https://localhost.com/api/Students/countGender
{
  "groupBy":"gender,classId,roomId"
}